/*
* Copyright (c) Meta Platforms, Inc. and affiliates.
*
* This source code is licensed under the MIT license found in the
* LICENSE file in the root directory of this source tree.
*/

// clang-format off

EXPECT_EQ(
  zero,
  toDouble(toImmutableRef(
      digit(0x00))));

// Mantissa is 52 ones.
EXPECT_EQ(
  makeDouble(positive, exp(52), mantissa(0x000fffffffffffffull)),
  toDouble(toImmutableRef(
      digit(0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff))));

// Largest positive number that fits a double without precision loss.
EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// Smallest negative number that fits a double without precision loss.
EXPECT_EQ(
  makeDouble(negative, exp(53), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x0000000000000001ull)),
  toDouble(toImmutableRef(
      digit(0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02))));

EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x0000000000000002ull)),
  toDouble(toImmutableRef(
      digit(0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000000ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000001ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000001ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000001ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000002ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06))));

EXPECT_EQ(
  makeDouble(positive, exp(54), mantissa(0x0000000000000002ull)),
  toDouble(toImmutableRef(
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07))));

/********************************************************************
 *
 * The following tests have a 53-bit mantissa that fits the double
 * precisely, and they have trailing zeros. No rounding should occur given
 * that the most significant bit not in the mantissa is always 0.
 *
 ********************************************************************/

EXPECT_EQ(
  makeDouble(positive, exp(52), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a))));

EXPECT_EQ(
  makeDouble(negative, exp(52), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa6))));

EXPECT_EQ(
  makeDouble(positive, exp(52), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5b))));

EXPECT_EQ(
  makeDouble(negative, exp(52), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5))));

EXPECT_EQ(
  makeDouble(positive, exp(55), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd0))));

EXPECT_EQ(
  makeDouble(negative, exp(55), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x30))));

EXPECT_EQ(
  makeDouble(positive, exp(55), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd8))));

EXPECT_EQ(
  makeDouble(negative, exp(55), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x28))));

EXPECT_EQ(
  makeDouble(positive, exp(58), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x80))));

EXPECT_EQ(
  makeDouble(negative, exp(58), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x80))));

EXPECT_EQ(
  makeDouble(positive, exp(58), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0xc0))));

EXPECT_EQ(
  makeDouble(negative, exp(58), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x40))));

EXPECT_EQ(
  makeDouble(positive, exp(61), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(61), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4c, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(61), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb6, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(61), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4a, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(64), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa0, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(64), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x60, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(64), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xb0, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(64), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x50, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(67), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x0d) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(67), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf2) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd3, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(67), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x0d) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x80, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(67), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf2) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0x80, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(70), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x69) +
      digit(0x69, 0x69, 0x69, 0x69, 0x69, 0x68, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(70), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x96) +
      digit(0x96, 0x96, 0x96, 0x96, 0x96, 0x98, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(70), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x69) +
      digit(0x69, 0x69, 0x69, 0x69, 0x69, 0x6c, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(70), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x96) +
      digit(0x96, 0x96, 0x96, 0x96, 0x96, 0x94, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(73), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b) +
      digit(0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x40, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(73), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4) +
      digit(0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xc0, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(73), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b) +
      digit(0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x60, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(73), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4) +
      digit(0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xa0, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(76), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(76), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5) +
      digit(0xa5, 0xa5, 0xa5, 0xa5, 0xa6, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(76), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5b, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(76), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5) +
      digit(0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(79), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd0, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(79), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x30, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(79), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd8, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(79), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x28, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(82), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96) +
      digit(0x96, 0x96, 0x96, 0x96, 0x80, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(82), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69) +
      digit(0x69, 0x69, 0x69, 0x69, 0x80, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(82), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96) +
      digit(0x96, 0x96, 0x96, 0x96, 0xc0, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(82), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69) +
      digit(0x69, 0x69, 0x69, 0x69, 0x40, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(85), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4) +
      digit(0xb4, 0xb4, 0xb4, 0xb4, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(85), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b) +
      digit(0x4b, 0x4b, 0x4b, 0x4c, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(85), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4) +
      digit(0xb4, 0xb4, 0xb4, 0xb6, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(85), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b) +
      digit(0x4b, 0x4b, 0x4b, 0x4a, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(88), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x01, 0xa5, 0xa5, 0xa5) +
      digit(0xa5, 0xa5, 0xa5, 0xa0, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(88), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfe, 0x5a, 0x5a, 0x5a) +
      digit(0x5a, 0x5a, 0x5a, 0x60, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(88), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x01, 0xa5, 0xa5, 0xa5) +
      digit(0xa5, 0xa5, 0xa5, 0xb0, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(88), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfe, 0x5a, 0x5a, 0x5a) +
      digit(0x5a, 0x5a, 0x5a, 0x50, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(91), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d) +
      digit(0x2d, 0x2d, 0x2d, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(91), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2) +
      digit(0xd2, 0xd2, 0xd3, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(91), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d) +
      digit(0x2d, 0x2d, 0x2d, 0x80, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(91), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2) +
      digit(0xd2, 0xd2, 0xd2, 0x80, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(97), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b, 0x4b, 0x4b, 0x4b) +
      digit(0x4b, 0x4b, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(97), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4, 0xb4, 0xb4, 0xb4) +
      digit(0xb4, 0xb4, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(97), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b, 0x4b, 0x4b, 0x4b) +
      digit(0x4b, 0x4b, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(97), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4, 0xb4, 0xb4, 0xb4) +
      digit(0xb4, 0xb4, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(100), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a) +
      digit(0x5a, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(100), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5) +
      digit(0xa5, 0xa6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(100), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a) +
      digit(0x5a, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(100), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5) +
      digit(0xa5, 0xa5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(103), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0xd2, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(103), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x2d, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(103), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x00, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0xd2, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(103), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xff, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x2d, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(106), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(106), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(106), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x06, 0x96, 0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(106), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf9, 0x69, 0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(109), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4) +
      digit(0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(109), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b) +
      digit(0x4c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(109), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4) +
      digit(0xb6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(109), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b) +
      digit(0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(112), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x01, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5) +
      digit(0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(112), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfe, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a) +
      digit(0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(112), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x01, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5) +
      digit(0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(112), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfe, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a) +
      digit(0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(115), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(115), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd3) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(115), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(115), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(118), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x68) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(118), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x98) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(118), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69, 0x69, 0x69, 0x6c) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(118), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96, 0x96, 0x96, 0x94) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(121), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x40) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(121), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xc0) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(121), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x03, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x60) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(121), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfc, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xa0) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(124), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(124), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa6, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(124), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x1a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5b, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(124), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xe5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(127), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x00) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd0, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(127), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xff) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x30, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(positive, exp(127), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x00) +
      digit(0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd8, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(127), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xff) +
      digit(0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x28, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

/********************************************************************
 *
 * The following tests have 54-bits. The 2 lowest significant bits are
 * modified to exercise different types of rounding.
 *
 ********************************************************************/

// L=0, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb5))));

EXPECT_EQ(
  makeDouble(negative, exp(53), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b))));

// L=0, M=1 -> round if d != 0
EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb6))));

EXPECT_EQ(
  makeDouble(negative, exp(53), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x4a))));

// L=1, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb7))));

EXPECT_EQ(
  makeDouble(negative, exp(53), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x49))));

// L=1, M=1 -> always round
EXPECT_EQ(
  makeDouble(positive, exp(53), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x34, 0xb4, 0xb4, 0xb4, 0xb4, 0xb4, 0xb8))));

EXPECT_EQ(
  makeDouble(negative, exp(53), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0xcb, 0x4b, 0x4b, 0x4b, 0x4b, 0x4b, 0x48))));

// L=0, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x68, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x97, 0xff, 0xff, 0xff, 0xff, 0xff))));

// L=0, M=1 -> round if d != 0
EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x95, 0xff, 0xff, 0xff, 0xff, 0xff))));

// L=1, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x93, 0xff, 0xff, 0xff, 0xff, 0xff))));

// L=1, M=1 -> always round
EXPECT_EQ(
  makeDouble(positive, exp(94), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x69, 0x69, 0x69, 0x69) +
      digit(0x69, 0x69, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x01))));

EXPECT_EQ(
  makeDouble(negative, exp(94), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x96, 0x96, 0x96, 0x96) +
      digit(0x96, 0x96, 0x91, 0xff, 0xff, 0xff, 0xff, 0xff))));

// L=0, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(128), mantissa(0x000a5a5a5a5a625aull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xa5, 0xa5, 0xa5, 0xa5, 0xa6, 0x25, 0xa0, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(128), mantissa(0x000a5a5a5a5c5a5aull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x3a, 0x5a, 0x60, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=0, M=1 -> round if d != 0
EXPECT_EQ(
  makeDouble(positive, exp(128), mantissa(0x000a5a5a625a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xa5, 0xa5, 0xa6, 0x25, 0xa5, 0xa5, 0xa8, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(128), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x56, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=1, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(128), mantissa(0x000a5ada5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xa5, 0xad, 0xa5, 0xa5, 0xa5, 0xa5, 0xb0, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(128), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x4f, 0x80) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=1, M=1 -> always round
EXPECT_EQ(
  makeDouble(positive, exp(128), mantissa(0x000ada5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0xad, 0xa5, 0xa5, 0xa5, 0xa5, 0xa5, 0xb8, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(128), mantissa(0x000a5a5a5c5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0xfe) +
      digit(0x5a, 0x5a, 0x5a, 0x3a, 0x5a, 0x5a, 0x48, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=0, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(627), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(627), mantissa(0x000a5a5a5a5a5a5aull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=0, M=1 -> round if d != 0
EXPECT_EQ(
  makeDouble(positive, exp(627), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(627), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=1, M=0 -> never round
EXPECT_EQ(
  makeDouble(positive, exp(627), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(627), mantissa(0x000a5a5a5a5a5a5bull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// L=1, M=1 -> always round
EXPECT_EQ(
  makeDouble(positive, exp(627), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0x0d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d) +
      digit(0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  makeDouble(negative, exp(627), mantissa(0x000a5a5a5a5a5a5cull)),
  toDouble(toImmutableRef(
      digit(0xf2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2, 0xd2) +
      digit(0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff) +
      digit(0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// Infinity -- 1 ** 1024 is too large to fit a double.
EXPECT_EQ(
  infinity,
  toDouble(toImmutableRef(
      digit(0x01) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

EXPECT_EQ(
  neg_infinity,
  toDouble(toImmutableRef(
      digit(0xff) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// Not infinity, but almost
EXPECT_EQ(
  makeDouble(positive, exp(1023), mantissa(0x000fffffffffffffull)),
  toDouble(toImmutableRef(
      digit(0x00) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// This is the "first" "infinite" bigint
EXPECT_EQ(
  infinity,
  toDouble(toImmutableRef(
      digit(0x00) +
      digit(0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// Not -infinity, but almost
EXPECT_EQ(
  makeDouble(negative, exp(1023), mantissa(0x000fffffffffffffull)),
  toDouble(toImmutableRef(
      digit(0xff) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

// This is the "first" "-infinite" bigint
EXPECT_EQ(
  neg_infinity,
  toDouble(toImmutableRef(
      digit(0xff) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00) +
      digit(0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00))));

